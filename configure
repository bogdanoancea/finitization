#!/bin/sh
set -e

# Detect OS (only to set -mmacosx-version-min)
UNAME_S=$(uname -s)
case "$UNAME_S" in
  Darwin) OS=macos ;;
  Linux)  OS=linux ;;
  *)      OS=other ;;
esac

# macOS minimum deployment target (safe to keep)
if [ "$OS" = "macos" ]; then
  CPPFLAGS="-mmacosx-version-min=11.0 $CPPFLAGS"
  LDFLAGS="-mmacosx-version-min=11.0 $LDFLAGS"
  export CPPFLAGS LDFLAGS
fi

: "${PKG_CONFIG:=pkg-config}"

# Detect architecture
if [ "$OS" = "windows" ]; then
  ARCHDIR=${R_ARCH:-x64}
else
  ARCHDIR=$(uname -m)  # arm64 or x86_64
fi

echo "Configuring for $OS / $ARCHDIR"

CPPFLAGS=""
LDFLAGS=""

# Try pkg-config
if ! command -v "$PKG_CONFIG" >/dev/null 2>&1; then
  cat >&2 <<'EOM'
ERROR: 'pkg-config' was not found.
Please install pkg-config and the development packages for GMP, CLN, and GiNaC.
  - Debian/Ubuntu: sudo apt-get install -y pkg-config libgmp-dev libcln-dev libginac-dev
  - Fedora:        sudo dnf install pkgconf-pkg-config gmp-devel cln-devel ginac-devel
  - openSUSE:      sudo zypper install pkgconf-pkg-config gmp-devel cln-devel ginac-devel
  - macOS (Homebrew): brew install pkg-config gmp cln ginac
EOM
  exit 1
fi

if "$PKG_CONFIG" --exists gmp cln ginac; then
    PKG_CPPFLAGS=$("$PKG_CONFIG" --cflags gmp cln ginac)
    PKG_LIBS=$("$PKG_CONFIG" --libs   gmp cln ginac)
else
    if [ "$_R_CHECK_CRAN_INCOMING_" = "TRUE" ]; then
        cat >&2 <<'EOM'
ERROR: Could not find GMP/CLN/GiNaC via pkg-config.
Please install the development packages and ensure pkg-config can find them.
  - Debian/Ubuntu: sudo apt-get install -y libgmp-dev libcln-dev libginac-dev
  - Fedora:        sudo dnf install gmp-devel cln-devel ginac-devel
  - openSUSE:      sudo zypper install gmp-devel cln-devel ginac-devel
  - macOS (Homebrew): brew install gmp cln ginac
EOM
        exit 1
    else
        if [ -f "${srcdir}/tools/extlibs.R" ]; then
            Rscript "${srcdir}/tools/extlibs.R"
            PKG_CPPFLAGS= "-I${srcdir}/linux/x86_64/include -g0 -ffunction-sections -fdata-sections -fPIC -DNDEBUG"
            PKG_LIBS="-L${srcdir}/linux/x86_64/lib -lginac -lcln -lgmp"
        else
            echo "GiNaC/CLN/GMP not found. See README.md for setup." >&2
            exit 1
        fi
    fi
fi

# Decide which C++ standard to ask R to use
if [ "$OS" = "macos" ] && [ "$ARCHDIR" = "x86_64" ]; then
  CXXSTD="CXX11"
  echo "  Will request C++11 on macOS Intel"
else
  CXXSTD="CXX14"
  echo "  Will request C++14 elsewhere"
fi

# Append C++ standard flag
CPPFLAGS="$CPPFLAGS $STD_FLAG"

# Dedupe linker flags
LDFLAGS=$(printf "%s\n" $LDFLAGS | awk '!seen[$0]++' | tr '\n' ' ')

# Safe optimization flags for CRAN
PKG_CPPFLAGS=$PKG_CPPFLAGS
PKG_CXXFLAGS=$PKG_CXXFLAGS
PKG_LIBS=$PKG_LIBS

# Write src/Makevars
cat > src/Makevars <<EOF
CXX_STD=$CXXSTD
PKG_CPPFLAGS=$PKG_CPPFLAGS
PKG_CXXFLAGS=$PKG_CXXFLAGS
PKG_CFLAGS=$PKG_CFLAGS
PKG_LIBS=$PKG_LIBS
EOF


# Write src/Makevars.win
cat > src/Makevars.win <<EOF
CXX_STD      = $CXXSTD
PKG_CPPFLAGS = $PKG_CPPFLAGS
PKG_CXXFLAGS = $PKG_CXXFLAGS
PKG_CFLAGS=$PKG_CFLAGS
PKG_LIBS     = $PKG_LIBS
EOF

echo "configure: Found GMP/CLN/GiNaC via pkg-config."
echo "Configuration complete."
echo "  CPPFLAGS: $CPPFLAGS"
echo "  LDFLAGS:  $LDFLAGS"
